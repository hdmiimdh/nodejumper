sudo apt update && sudo apt upgrade -y

version="1.17.2" \
&& cd ~ \
&& wget "https://golang.org/dl/go$version.linux-amd64.tar.gz" \
&& sudo rm -rf /usr/local/go \
&& sudo tar -C /usr/local -xzf "go$version.linux-amd64.tar.gz" \
&& rm "go$version.linux-amd64.tar.gz" \
&& echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile \
&& source ~/.bash_profile

go version # go version go1.17.2 linux/amd64

sudo apt install -y make gcc jq git

cd && git clone https://github.com/sei-protocol/sei-chain.git
cd sei-chain && git checkout 1.0.0beta && go build -o build/seid ./cmd/sei-chaind
mkdir -p ~/go/bin && mv build/seid ~/go/bin

$binaryName version

# replace nodejumper with your own moniker, if you'd like
$binaryName config chain-id $chainId
$binaryName init nodejumper --chain-id $chainId

cd && wget https://raw.githubusercontent.com/sei-protocol/testnet/master/sei-testnet-1/genesis.json
mv -f genesis.json ~/$homeDirectoryName/config/genesis.json
sha256sum ~/$homeDirectoryName/config/genesis.json # d212a915dcde84f1dc2208ca5ee890adfd6ffc5d4ff9a32332f50659b3b5ab1a

cd && wget https://raw.githubusercontent.com/sei-protocol/testnet/master/sei-testnet-1/addrbook.json
mv -f addrbook.json ~/$homeDirectoryName/config/addrbook.json
sha256sum ~/$homeDirectoryName/config/addrbook.json # 2ff327d2ab89c9ec56f86c14fdc67cbfc12e4716ae8cecc3bb497d92c4d8411e

sed -i 's/^minimum-gas-prices *=.*/minimum-gas-prices = "0.0001$denomName"/g' ~/$homeDirectoryName/config/app.toml
seeds=""
peers="$rpcPeer"
sed -i -e "s/^seeds *=.*/seeds = \"$seeds\"/; s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" ~/$homeDirectoryName/config/config.toml

# in case of pruning
sed -i 's/pruning = "default"/pruning = "custom"/g' ~/$homeDirectoryName/config/app.toml
sed -i 's/pruning-keep-recent = "0"/pruning-keep-recent = "100"/g' ~/$homeDirectoryName/config/app.toml
sed -i 's/pruning-interval = "0"/pruning-interval = "10"/g' ~/$homeDirectoryName/config/app.toml

sudo tee <<EOF >/dev/null /etc/systemd/system/$serviceName.service
[Unit]
Description=$chainName Node
After=network-online.target
[Service]
User=$USER
ExecStart=$(which $binaryName) start
Restart=on-failure
RestartSec=10
LimitNOFILE=10000
[Install]
WantedBy=multi-user.target
EOF

$binaryName unsafe-reset-all

rm -rf ~/$homeDirectoryName/data && cd ~/$homeDirectoryName

SNAP_NAME=$(curl -s https://snapshots1-testnet.nodejumper.io/sei-testnet/ | egrep -o ">sei-testnet-1.*\.tar.lz4" | tr -d ">")
wget -O - https://snapshots1-testnet.nodejumper.io/sei-testnet/${SNAP_NAME} | lz4 -dc - | tar -xf -

sudo systemctl daemon-reload && sudo systemctl enable $serviceName \
&& sudo systemctl restart $serviceName && sudo journalctl -u $serviceName -f --no-hostname -o cat

Create Validator Delimiter

# Create wallet
$binaryName keys add wallet

- name: wallet
  type: local
  address: cosmos1lfpde6scf7ulzvuq2suavav6cpmpy0rzxne0pw
  pubkey: '{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"Auq9WzVEs5pCoZgr2WctjI7fU+lJCH0I3r6GC1oa0tc0"}'
  mnemonic: ""

#!!! SAVE SEED PHRASE
kite upset hip dirt pet winter thunder slice parent flag sand express suffer chest custom pencil mother bargain remember patient other curve cancel sweet

# Wait util the node is synced, should return FALSE
$binaryName status | jq .SyncInfo.catching_up

# Go to discord channel #testnet-faucet and fill in google form to request tokens

# Verify the balance
$binaryName q bank balances <YOUR_WALLET_ADDRESS>

  balances:
  - amount: "1000000"
    denom: usei

#Create validator
$binaryName tx staking create-validator \
--amount=1000000$denomName \
--pubkey=$($binaryName tendermint show-validator) \
--moniker=<YOUR_MONIKER_NAME> \
--chain-id=$chainId \
--commission-rate=0.1 \
--commission-max-rate=0.2 \
--commission-max-change-rate=0.05 \
--min-self-delegation=1 \
--from=wallet \
-y
